import pygame as py
import sys

py.init()

# Estrtura do game
size = (300, 300)
screen = py.display.set_mode(size)
py.display.set_caption('Jogo da Velha')
running = True
grid_size = 100
line_color = (0, 0, 0)
o_color = (0, 255, 255)
x_color = (255, 0, 0)
line_width = 5

# Matriz jogo da velha
grid = [['' for _ in range(3)] for _ in range(3)]

# Dsenhar a Grade
def draw_grid():
    for x in range(1, 3):
        py.draw.line(screen, line_color, (x * grid_size, 0), (x * grid_size, size[1]), line_width)
        py.draw.line(screen, line_color, (0, x * grid_size), (size[0], x * grid_size), line_width)

# Dsenho "O" e "X"
def draw_marks():
    for row in range(3):
        for col in range(3):
            if grid[row][col] == 'O':
                py.draw.circle(screen, o_color, (col * grid_size + grid_size // 2, row * grid_size + grid_size // 2), grid_size // 2 - 10, line_width)
            elif grid[row][col] == 'X':
                start_pos1 = (col * grid_size + 10, row * grid_size + 10)
                end_pos1 = (col * grid_size + grid_size - 10, row * grid_size + grid_size - 10)
                start_pos2 = (col * grid_size + grid_size - 10, row * grid_size + 10)
                end_pos2 = (col * grid_size + 10, row * grid_size + grid_size - 10)
                py.draw.line(screen, x_color, start_pos1, end_pos1, line_width)
                py.draw.line(screen, x_color, start_pos2, end_pos2, line_width)

# check par aclidck do mouse
def check_click(pos, button):
    col = pos[0] // grid_size
    row = pos[1] // grid_size
    if grid[row][col] == '':
        if button == 1:  # botao esquedo
            grid[row][col] = 'O'
        elif button == 3:  # butao direot
            grid[row][col] = 'X'

# check para vencedor
def check_winner():
    # linhas
    for row in grid:
        if row[0] == row[1] == row[2] and row[0] != '':
            return row[0]
    # colunas
    for col in range(3):
        if grid[0][col] == grid[1][col] == grid[2][col] and grid[0][col] != '':
            return grid[0][col]
    # diagonais
    if grid[0][0] == grid[1][1] == grid[2][2] and grid[0][0] != '':
        return grid[0][0]
    if grid[0][2] == grid[1][1] == grid[2][0] and grid[0][2] != '':
        return grid[0][2]
    return None

# aqui da a mensagem para o vencedor
def display_winner(winner):
    font = py.font.Font(None, 74)
    text = font.render(f'{winner} venceu!', True, (0, 255, 0))
    rect = text.get_rect(center=(size[0] // 2, size[1] // 2))
    screen.blit(text, rect)
    py.display.update()
    py.time.wait(2000)  # Esperar 3 segundos para mostrar a mensagem
    py.quit()
    sys.exit()

#aqui da o loop
while running:
    screen.fill((255, 255, 255))
    draw_grid()
    draw_marks()

    for event in py.event.get():
        if event.type == py.QUIT:
            running = False
        elif event.type == py.MOUSEBUTTONUP:
            check_click(py.mouse.get_pos(), event.button)
            winner = check_winner()
            if winner:
                display_winner(winner)

    py.display.update()

py.quit()
